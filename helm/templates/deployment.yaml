apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sql-exporter.fullname" . }}
  labels:
    {{- include "sql-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sql-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.configuration.yaml") . | sha256sum }}
        checksum/collectors: {{ include (print $.Template.BasePath "/configmap.collectors.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "sql-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ if .Values.serviceAccount.create }}{{ template "sql-exporter.fullname" . }}{{ else }}{{ include "sql-exporter.serviceAccountName" . }}{{end}}
      {{- if eq (include "sql-exporter.volumes" .)  "\"true\"" }}
      volumes:
        {{- if .Values.createConfig }}
        - name: sql-exporter
          secret:
            secretName: {{ include "sql-exporter.fullname" . }}
        {{- end }}
        {{- if .Values.collectorFiles }}
        - name: sql-collector
          configMap:
            name: {{ include "sql-exporter.fullname" . }}
        {{- end }}
      {{- end }}
      {{- range $v := .Values.extraVolumes }}
        - name: {{ $v.name }}
          {{- toYaml $v.volume | nindent 10 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["-config.file=/etc/sql_exporter/sql_exporter.yml"]
          {{- if eq (include "sql-exporter.volumes" .) "\"true\"" }}
          volumeMounts:
          {{- if .Values.createConfig }}
          - name: sql-exporter
            readOnly: true
            mountPath: /etc/sql_exporter/
          {{- end }}
          {{- if .Values.collectorFiles }}
          - name: sql-collector
            readOnly: true
            mountPath: /etc/sql_exporter/collectors/
          {{- end }}
          {{- range $v := .Values.extraVolumes }}
          - name: {{ $v.name }}
            {{- toYaml $v.mount | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }} 
          {{- end }}
          {{- if .Values.env }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              {{- if $value.value }}
              value: {{ $value.value }}
              {{- else }}
              valueFrom:
                {{- if eq $value.from.kind "Secret" }}
                secretKeyRef:
                {{- else if eq $value.from.kind "ConfigMap" }}
                configMapKeyRef:
                {{- else }}
                {{- fail "Values.env[].from.kind should be either Secret or ConfigMap" }}
                {{- end }}
                  name: {{ $value.from.name }}
                  key: {{ $value.from.key }}
              {{- end }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9399
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9399
          ports:
            - name: http
              containerPort: 9399
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- with .Values.extraContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
